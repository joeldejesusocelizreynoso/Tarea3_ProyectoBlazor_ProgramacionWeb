@page "/registro/nuevo"
@page "/registro/editar/{id}"
@inject NavigationManager NavMan
@inject IJSRuntime JSx
@rendermode InteractiveServer
@using System.Text.Json

<PageTitle>Editar Registro</PageTitle>

<h3>Editar Registro</h3>

<EditForm Model="@registro" OnValidSubmit="@GuardarRegistro">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="Fecha" class="form-label">Fecha</label>
        <InputDate id="Fecha" class="form-control" @bind-Value="registro.Fecha" />
        <ValidationMessage For="@(() => registro.Fecha)" />
    </div>

    <div class="mb-3">
        <label for="Descripcion" class="form-label">Descripción</label>
        <InputTextArea id="Descripcion" class="form-control" @bind-Value="registro.Descripcion" />
        <ValidationMessage For="@(() => registro.Descripcion)" />
    </div>

    <div class="text-center">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a href="registro" class="btn btn-success">Regresar</a>
    </div>
</EditForm>

@code {

    [Parameter]

    public string? id { get; set; } = null;

    private Reporte registro = new Reporte();

    List<Reporte> registros = new List<Reporte>();

    private void GuardarRegistro()
    {
        if (string.IsNullOrEmpty(registro.Id))
        {
            registro.Id = Guid.NewGuid().ToString();
            registros.Add(registro);
        }
        else
        {
            var index = registros.FindIndex(x => x.Id == registro.Id);
            registros[index] = registro;
        }


        JSx.InvokeVoidAsync("localStorage.setItem", "registros", JsonSerializer.Serialize(registros));
        NavMan.NavigateTo("registro");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var registrosJson = await JSx.InvokeAsync<string>("localStorage.getItem", "registros");

            if (registrosJson != null)
            {
                registros = JsonSerializer.Deserialize<List<Reporte>>(registrosJson);

                if (id != null)
                {
                    foreach (var item in registros)
                    {
                        if (item.Id == id)
                        {
                            registro = item;
                            break;
                        }
                    }
                }

                StateHasChanged();
            }
        }
    }
}
